{"version":3,"sources":["app.js","environment.js","main.js","slide.js","resources/index.js","slides/contents-slide.js","slides/index.js","resources/attributes/fragment.js","slides/_slides.scss","app.scss"],"names":["App","i18n","ea","selectedLanguage","getLocale","subscribe","payload","newValue","attached","initialize","center","switchLanguage","lang","setLocale","inject","debug","testing","configure","aurelia","use","standardConfiguration","globalResources","feature","developmentLogging","plugin","instance","i18next","setup","backend","loadPath","lng","attributes","fallbackLng","start","then","setRoot","Slide","config","ContentsSlide","topics","FragmentCustomAttribute","host","classList","add","Element"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import Reveal from 'reveal.js';\nimport { I18N } from 'aurelia-i18n';\nimport { EventAggregator } from 'aurelia-event-aggregator';\n\nexport class App {\n  static inject = [I18N, EventAggregator];\n\n  constructor(i18n, ea) {\n    this.i18n = i18n;\n    this.ea = ea;\n\n    this.selectedLanguage = this.i18n.getLocale();\n    this.ea.subscribe('i18n:locale:changed', payload => {\n      this.selectedLanguage = payload.newValue;\n    });\n  }\n\n  attached() {\n    Reveal.initialize({\n      center: false\n    });\n  }\n\n  switchLanguage(lang) {\n    this.i18n.setLocale(lang);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","\nimport Backend from 'i18next-xhr-backend';\nimport environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .globalResources('./slide')\n    .feature('resources')\n    .feature('slides');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.use.plugin('aurelia-i18n', (instance) => {\n    // register backend plugin\n    instance.i18next.use(Backend);\n\n    // adapt options to your needs (see http://i18next.com/docs/options/)\n    // make sure to return the promise of the setup method, in order to guarantee proper loading\n    return instance.setup({\n      backend: {                                  // <-- configure backend settings\n        loadPath: './locales/{{lng}}/{{ns}}.json' // <-- XHR settings for where to get the files from\n      },\n      lng: 'en',\n      attributes: ['t', 'i18n'],\n      fallbackLng: 'de',\n      debug: false\n    });\n  });\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n  containerless,\n  bindable\n } from 'aurelia-framework';\n\n@containerless()\nexport class Slide {\n  @bindable() name;\n}\n","export function configure(config) {\n  config.globalResources(['./attributes/fragment']);\n}\n","import {\n  inlineView,\n  containerless\n} from 'aurelia-framework';\n\n@inlineView(`\n  <template>\n    <slide name=\"contents-slide\">\n      <h3>What will be covered?</h3>\n      <ul>\n        <li repeat.for=\"topic of topics\" fragment>\\${topic}</li>\n      </ul>\n    </slide>\n  </template>\n`)\n@containerless()\nexport class ContentsSlide {\n  topics = [\n    'I18N ?!?',\n    'International Apps with Aurelia-I18N',\n    'Only a few slides',\n    'Some code',\n    'Conclusion'\n  ];\n}\n","export function configure(config) {\n  config.globalResources([\n    './contents-slide',\n    './i18n-slide.html',\n    './aurelia-slide.html',\n    './conclusion-slide.html',\n    './setup-slide.html'\n  ]);\n}\n","/**\n * naming convention --> AttributeName + CustomAttribute\n * ---\n * alternative:\n * import {customAttribute} from 'aurelia-framework';\n *\n * @customAttribute('fragment')\n */\n\nexport class FragmentCustomAttribute {\n  static inject = [Element]\n\n  constructor(host) {\n    this.host = host;\n  }\n\n  attached() {\n    this.host.classList.add('fragment');\n  }\n}\n",".intro-slide {\n  .author {\n    margin-top: 50px;\n    font-size: 18px;\n  }\n}\n\n.contents-slide {\n  ul li {\n    margin-bottom: 20px;\n  }\n}\n\n.aurelia-slide {\n  .plugin-links {\n    text-align: left;\n    margin: 0 0 40px 100px;\n  }\n}\n","@import 'slides/slides';\n\n.presentation-header {\n  padding-top: 15px;\n  text-align: center;\n}\n\n.languages {\n  list-style: none;\n  margin: 0 auto 10px auto;\n  display: inline-block;\n  width: 200px;\n\n  li {\n    float: left;\n    margin-right: 10px;\n\n    &.selected {\n      text-decoration: underline;\n      \n      * {\n        color: blue!important;\n      }\n    }\n\n    a {\n      &,\n      &:hover,\n      &:active,\n      &:visited {\n        text-decoration: none;\n        color: white;\n        font-weight: bold;\n      }\n    }\n  }\n}\n"],"sourceRoot":".."}